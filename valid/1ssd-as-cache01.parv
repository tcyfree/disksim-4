# ssh as cache parv
# Luke Plewa
# Uses ssd as a level 4 cache
disksim_global Global { 
   Init Seed = 42,
   Real Seed = 42,
   # Statistic warm-up period = 1000 I/Os,
   Stat definition file = statdefs
}

disksim_stats Stats {
iodriver stats = disksim_iodriver_stats {
Print driver size stats = 1,
Print driver locality stats = 1,
Print driver blocking stats = 1,
Print driver interference stats = 1,
Print driver queue stats = 1,
Print driver crit stats = 1,
Print driver idle stats = 1,
Print driver intarr stats = 1,
Print driver streak stats = 1,
Print driver stamp stats = 1,
Print driver per-device stats = 1 },
bus stats = disksim_bus_stats {
Print bus idle stats = 1,
Print bus arbwait stats = 1 },
ctlr stats = disksim_ctlr_stats {
Print controller cache stats = 1,
Print controller size stats = 1,
Print controller locality stats = 1,
Print controller blocking stats = 1,
Print controller interference stats = 1,
Print controller queue stats = 1,
Print controller crit stats = 1,
Print controller idle stats = 1,
Print controller intarr stats = 1,
Print controller streak stats = 1,
Print controller stamp stats = 1,
Print controller per-device stats = 1 },
device stats = disksim_device_stats {
Print device queue stats = 1,
Print device crit stats = 1,
Print device idle stats = 1,
Print device intarr stats = 1,
Print device size stats = 1,
Print device seek stats = 1,
Print device latency stats = 1,
Print device xfer stats = 1,
Print device acctime stats = 1,
Print device interfere stats = 1,
Print device buffer stats = 1 },
process flow stats = disksim_pf_stats {
Print per-process stats =  1,
Print per-CPU stats =  1,
Print all interrupt stats =  1,
Print sleep stats =  1
}
} # end of stats block


disksim_iodriver DRIVER0 {
type = 1,
Constant access time = 0.0,
Scheduler = disksim_ioqueue {
Scheduling policy = 3,
Cylinder mapping strategy = 1,
Write initiation delay = 0.0,
Read initiation delay = 0.0,
Sequential stream scheme = 0,
Maximum concat size = 0,
Overlapping request scheme = 0,
Sequential stream diff maximum = 0,
Scheduling timeout scheme = 0,
Timeout time/weight = 30,
Timeout scheduling = 3,
Scheduling priority scheme = 0,
Priority scheduling = 3
   }, # end of Scheduler
Use queueing in subsystem = 1
} # end of DRV0 spec

disksim_bus BUS0 {
type = 2,
Arbitration type = 1,
Arbitration time = 0.0,
Read block transfer time = 0.0,
Write block transfer time = 0.0,
Print stats =  0
} # end of BUS0 spec

disksim_bus BUS1 {
type = 1,
Arbitration type = 1,
Arbitration time = 0.0,
Read block transfer time = 0.05120,
Write block transfer time = 0.05120,
Print stats =  1
} # end of BUS1 spec

disksim_ctlr CTLR0 {
 type = 3,
 Scale for delays = 0.0,
 Bulk sector transfer time = 0.0,
 Maximum queue length = 0,
 Print stats =  1,
 Scheduler = disksim_ioqueue {
     Scheduling policy = 3,
     Cylinder mapping strategy = 1,
     Write initiation delay = 0.0,
     Read initiation delay = 0.0,
     Sequential stream scheme = 3,
     Maximum concat size = 128,
     Overlapping request scheme = 0,
     Sequential stream diff maximum = 0,
     Scheduling timeout scheme = 0,
     Timeout time/weight = 6,
     Timeout scheduling = 4,
     Scheduling priority scheme = 0,
     Priority scheduling = 4
 },  # end of ioqueue spec 

Cache = disksim_cachedev { 
  Cache size = 2056008,            # size in blocks
  Cache device = SSD,    # device caching on
  Cached device = disk,            # device being cached
  Max request size = 512,
  Write scheme = 2,                  # 2 is write-through, 3 is write-back
  Flush policy = 0,                     # 0 is on-demand, 1 is period
  Flush period = 0.0,                 # if policy, time between write-backs
  Flush idle delay = 100.0         # idle time until write-back inits
}, # end of ssd cache spec,  # end of cachedev spec 

 Max per-disk pending count = 1

} # end of CTLR0 spec

ssdmodel_ssd SSD {
     # vp - this is a percentage of total pages in the ssd
     Reserve pages percentage = 15,

     # vp - min percentage of free blocks needed. if the free 
     # blocks drop below this, cleaning kicks in
     Minimum free blocks percentage = 5,

     # vp - a simple read-modify-erase-write policy = 1 (no longer supported)
     # vp - osr write policy = 2
     Write policy = 2,

     # vp - random = 1 (not supp), greedy = 2, wear-aware = 3
     Cleaning policy = 2,

     # vp - number of planes in each flash package (element)
     Planes per package = 8,

     # vp - number of flash blocks in each plane
     Blocks per plane = 2048,

     # vp - how the blocks within an element are mapped on a plane
     # simple concatenation = 1, plane-pair stripping = 2 (not tested),
     # full stripping = 3
     Plane block mapping = 3,

     # vp - copy-back enabled (1) or not (0)
     Copy back = 1,

     # how many parallel units are there?
     # entire elem = 1, two dies = 2, four plane-pairs = 4
     Number of parallel units = 1,

     # vp - we use diff allocation logic: chip/plane
     # each gang = 0, each elem = 1, each plane = 2
     Allocation pool logic = 1,

     # elements are grouped into a gang
     Elements per gang = 1,

     # shared bus (1) or shared control (2) gang
     Gang share = 1,

     # when do we want to do the cleaning?
     Cleaning in background = 0,

     Command overhead =  0.00,
     Bus transaction latency =  0.0,

#    Assuming PCI-E, with 8 lanes with 8b/10b encoding.
#    This gives 2.0 Gbps per lane and with 8 lanes we get about
#    2.0 GBps. So, bulk sector transfer time is about 0.238 us.
#    Use the "Read block transfer time" and "Write block transfer time"
#    from disksim_bus above.
     Bulk sector transfer time =  0,

     Flash chip elements = 8,

     Page size = 8,

     Pages per block = 64,

     # vp - changing the no of blocks from 16184 to 16384
     Blocks per element = 16384,

     Element stride pages = 1,

     Never disconnect =  1,
     Print stats =  1,
     Max queue length =  20,
     Scheduler = disksim_ioqueue {
       Scheduling policy =  1,
       Cylinder mapping strategy =  0,
       Write initiation delay =  0,
       Read initiation delay =  0.0,
       Sequential stream scheme =  0,
       Maximum concat size =  0,
       Overlapping request scheme =  0,
       Sequential stream diff maximum =  0,
       Scheduling timeout scheme =  0,
       Timeout time/weight =  0,
       Timeout scheduling =  0,
       Scheduling priority scheme =  0,
       Priority scheduling =  1
     },
     Timing model = 1,

     # vp changing the Chip xfer latency from per sector to per byte
     Chip xfer latency = 0.000025,

     Page read latency = 0.025,
     Page write latency = 0.200,
     Block erase latency = 1.5
}  # end of SSD spec

# HP_C3323A
source hp_c3323a.diskspecs

# component instantiation
instantiate [ statfoo ]    as  Stats
instantiate [ bus0 ]             as  BUS0
instantiate [ bus1 ]             as  BUS1
instantiate [ driver0 ]          as  DRIVER0
instantiate [ disk, SSD ]   as  HP_C3323A

# this controller contains a cachedev which refers to disk0 and disk1
# so they must be instantiated first
instantiate [ ctlr0 ]            as  CTLR0


# system topology
topology disksim_iodriver driver0 [
     disksim_bus bus0 [ 
          disksim_ctlr ctlr0 [ 
               disksim_bus bus1 [ 
                    disksim_disk disk [],
                    disksim_disk SSD []
                    # end of bus1
               ]
               # end of ctlr0
          ]
          # end of bus0
     ]
     # end of system topology
]

# no syncsets

disksim_logorg org0 {
   Addressing mode = Parts,
   Distribution scheme = Asis,
   Redundancy scheme = Noredun,
   devices = [ disk ],
   Stripe unit  =  2056008,
   Synch writes for safety =  0,
   Number of copies =  2,
   Copy choice on read =  6,
   RMW vs. reconstruct =  0.5,
   Parity stripe unit =  64,
   Parity rotation type =  1,
   Time stamp interval =  0.000000,
   Time stamp start time =  60000.000000,
   Time stamp stop time =  10000000000.000000,
   Time stamp file name =  stamps
} # end of logorg org0 spec

disksim_pf Proc {
   Number of processors =  5,
   Process-Flow Time Scale =  1.0
} # end of process flow spec

disksim_synthio Synthio {
   Number of I/O requests to generate =  10000,
   Maximum time of trace generated  =  1000.0,
   System call/return with each request =  0,
   Think time from call to request =  0.0,
   Think time from request to return =  0.0,
Generators = [
disksim_synthgen { # generator 0 
   Storage capacity per device  =  2056008,
   devices = [ disk ], 
   Blocking factor =  8,
   Probability of sequential access =  0.2,
   Probability of local access =  0.3,
   Probability of read access =  0.66,
   Probability of time-critical request =  0.2,
   Probability of time-limited request =  0.3,
   Time-limited think times  = [ normal, 30.0, 100.0  ],
   General inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Sequential inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Local inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Local distances  = [ normal, 0.0, 40000.0  ],
   Sizes  = [ exponential, 0.0, 8.0  ]
}, # end of generator 0 
disksim_synthgen { # generator 1 
   Storage capacity per device  =  2056008,
   devices = [ disk ], 
   Blocking factor =  8,
   Probability of sequential access =  0.2,
   Probability of local access =  0.3,
   Probability of read access =  0.66,
   Probability of time-critical request =  0.2,
   Probability of time-limited request =  0.3,
   Time-limited think times  = [ normal, 30.0, 100.0  ],
   General inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Sequential inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Local inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Local distances  = [ normal, 0.0, 40000.0  ],
   Sizes  = [ exponential, 0.0, 8.0  ]
}, # end of generator 1 
disksim_synthgen { # generator 2 
   Storage capacity per device  =  2056008,
   devices = [ disk ], 
   Blocking factor =  8,
   Probability of sequential access =  0.2,
   Probability of local access =  0.3,
   Probability of read access =  0.66,
   Probability of time-critical request =  0.2,
   Probability of time-limited request =  0.3,
   Time-limited think times  = [ normal, 30.0, 100.0  ],
   General inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Sequential inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Local inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Local distances  = [ normal, 0.0, 40000.0  ],
   Sizes  = [ exponential, 0.0, 8.0  ]
}, # end of generator 2
disksim_synthgen { # generator 3 
   Storage capacity per device  =  2056008,
   devices = [ disk ], 
   Blocking factor =  8,
   Probability of sequential access =  0.2,
   Probability of local access =  0.3,
   Probability of read access =  0.66,
   Probability of time-critical request =  0.2,
   Probability of time-limited request =  0.3,
   Time-limited think times  = [ normal, 30.0, 100.0  ],
   General inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Sequential inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Local inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Local distances  = [ normal, 0.0, 40000.0  ],
   Sizes  = [ exponential, 0.0, 8.0  ]
}, # end of generator 3 
disksim_synthgen { # generator 4 
   Storage capacity per device  =  2056008,
   devices = [ disk ], 
   Blocking factor =  8,
   Probability of sequential access =  0.2,
   Probability of local access =  0.3,
   Probability of read access =  0.66,
   Probability of time-critical request =  0.2,
   Probability of time-limited request =  0.3,
   Time-limited think times  = [ normal, 30.0, 100.0  ],
   General inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Sequential inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Local inter-arrival times  = [ exponential, 0.0, 50.0  ],
   Local distances  = [ normal, 0.0, 40000.0  ],
   Sizes  = [ exponential, 0.0, 8.0  ]
} # end of generator 4 
] # end of generator list 
} # end of synthetic workload spec
